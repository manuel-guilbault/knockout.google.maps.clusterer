/*
*   knockout.google.maps.clusterer 0.1.0 (2014-01-15)
*   Created by Manuel Guilbault (https://github.com/manuel-guilbault)
*
*   Source: https://github.com/manuel-guilbault/knockout.google.maps.clusterer
*   MIT License: http://www.opensource.org/licenses/MIT
*/!function(a){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?a(require("knockout"),exports):"function"==typeof define&&define.amd?define(["knockout","exports"],a):a(ko,ko.validation={})}(function(a){if(void 0===typeof a.google.maps)throw"knockout.google.maps is required, please ensure it is loaded before loading this plugin";!function(){function b(b){return a.utils.domData.get(b,"clusterer")}function c(c,d){var e=b(c);e&&e.removeMarker(c),a.utils.domData.set(c,"clusterer",d),d&&d.addMarker(c)}function d(a){c(a)}var e="$clusterer";a.bindingHandlers.clusterer={init:function(b,c,d,f,g){if(void 0===g.$map)throw"clusterer binding must be used only inside the scope of a map binding.";var h=a.utils.unwrapObservable(c()),i=a.google.maps.binder.getCreateOptions(g,h,a.bindingHandlers.clusterer.binders),j=new MarkerClusterer(g.$map,[],i),k=new a.google.maps.Subscriptions;a.google.maps.binder.bind(g,h,j,k,a.bindingHandlers.clusterer.binders);var l=a.utils.unwrapObservable(h.name)||e,m={};m[l]=j;var n=g.extend(m);return a.applyBindingsToDescendants(n,b),{controlsDescendantBindings:!0}},binders:{ignoreHidden:{createOptions:"ignoreHidden"},gridSize:{createOptions:"gridSize",bindings:{name:"gridSize",vmToObj:{setter:"setGridSize"}}},maxZoom:{createOptions:"maxZoom",bindings:{name:"maxZoom",vmToObj:{setter:"setMaxZoom"}}},styles:{createOptions:"styles",bindings:{name:"styles",vmToObj:{setter:function(a,b){a.setStyles(b),a.resetViewport(),a.redraw()}}}},calculator:{createOptions:"calculator"}}},a.virtualElements.allowedBindings.clusterer=!0,a.bindingHandlers.marker.binders.clusterer={bind:function(f,g,h,i){var j=a.utils.unwrapObservable(g.clusterer)||e,k=f[j];k&&(c(h,k),i.add(function(){d(h)})),a.isObservable(g.clusterer)&&i.addKOSubscription(g.clusterer.subscribe(function(a){a&&c(h,f[a])})),i.addGMListener(google.maps.event.addListener(h,"visible_changed",function(){var c=b(h),d=a.utils.domData.get(c,"needsRepaint");d||(a.utils.domData.set(c,"needsRepaint",!0),setTimeout(function(){var c=b(h);c.repaint(),a.utils.domData.set(c,"needsRepaint",!1)},0))}))}}}()});